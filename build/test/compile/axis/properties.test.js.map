{"version":3,"file":"properties.test.js","sourceRoot":"","sources":["../../../../test/compile/axis/properties.test.ts"],"names":[],"mappings":"AAAA,8BAA8B;AAE9B,OAAO,EAAC,MAAM,EAAC,MAAM,MAAM,CAAC;AAC5B,OAAO,KAAK,UAAU,MAAM,sCAAsC,CAAC;AAEnE,OAAO,EAAC,uBAAuB,EAAC,MAAM,YAAY,CAAC;AAEnD,QAAQ,CAAC,cAAc,EAAE;IACvB,QAAQ,CAAC,QAAQ,EAAE;QACjB,EAAE,CAAC,uEAAuE,EAAE;YAC1E,IAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAC,CAAC,CAAC;YAC3E,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE;YACpD,IAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAC,CAAC,CAAC;YACtF,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qDAAqD,EAAE;YACxD,IAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAC,CAAC,CAAC;YAC1E,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,EAAE;QACnB,EAAE,CAAC,uCAAuC,EAAE;YAC1C,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE;YACxC,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,WAAW,EAAE;QACpB,EAAE,CAAC,uDAAuD,EAAE;YAC1D,IAAM,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,GAAG,EAAE,EAAC,OAAO,EAAE,EAAE,EAAC,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAC,EAAE,QAAQ,EAAE,EAAC,MAAM,EAAG,GAAG,EAAC,CAAC,CAAC;YAC9H,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,EAAC,MAAM,EAAE,YAAY,EAAC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;gCAEQ,QAAQ;YACf,EAAE,CAAC,2EAAyE,QAAU,EAAE;gBACtF,IAAM,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,QAAQ,UAAA,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAC,EAAE,QAAQ,EAAE,EAAC,MAAM,EAAG,GAAG,EAAC,CAAC,CAAC;gBAChH,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;QACP,CAAC;QALD,KAAuB,UAAkD,EAAlD,KAAA,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,CAAe,EAAlD,cAAkD,EAAlD,IAAkD;YAApE,IAAM,QAAQ,SAAA;oBAAR,QAAQ;SAKlB;QAED,EAAE,CAAC,mDAAmD,EAAE;YACtD,IAAM,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAC,EAAE,QAAQ,EAAE,EAAC,MAAM,EAAG,GAAG,EAAC,CAAC,CAAC;YAC1G,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,EAAC,MAAM,EAAE,YAAY,EAAC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kDAAkD,EAAE;YACrD,IAAM,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAC,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;YAClG,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oDAAoD,EAAE;YACvD,IAAM,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAC,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;YACpG,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,SAAS,EAAE;QAClB,EAAE,CAAC,yCAAyC,EAAE;YAC5C,IAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAC,EAAE,EAAE,CAAC,CAAC;YAC1E,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yCAAyC,EAAE;YAC5C,IAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,EAAC,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAC,EAAE,EAAE,CAAC,CAAC;YAC7F,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sDAAsD,EAAE;YACzD,IAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,EAAC,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAC,EAAE,EAAE,CAAC,CAAC;YAC5F,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,QAAQ,EAAE;QACjB,EAAE,CAAC,sDAAsD,EAAE;YACzD,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,EAAC,MAAM,EAAE,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,EAAC,EAAE,IAAI,EAAE,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAC,EAAE,GAAG,CAAC,CAAC;YAEpH,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE;gBACvB,EAAC,QAAQ,EAAE,kCAAkC,EAAC;gBAC9C,EAAC,QAAQ,EAAE,kCAAkC,EAAC;aAC/C,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE;YACjD,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,EAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC,EAAE,IAAI,EAAE,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAC,EAAE,GAAG,CAAC,CAAC;YAExG,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oDAAoD,EAAE;YACvD,IAAM,MAAM,GAAG,uBAAuB,CAAC;gBACrC,MAAM,EAAE,KAAK;gBACb,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,MAAM,EAAE,cAAc;wBACtB,OAAO,EAAE,UAAU;wBACnB,OAAO,EAAE,EAAC,QAAQ,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;wBAC1B,KAAK,EAAE,EAAC,QAAQ,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;qBACxB;iBACF;gBACD,MAAM,EAAE,EAAC,KAAK,EAAE,kBAAkB,EAAC;aACpC,CAAC,CAAC;YACH,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;YAExE,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/* tslint:disable:quotemark */\n\nimport {assert} from 'chai';\nimport * as properties from '../../../src/compile/axis/properties';\nimport {TimeUnit} from '../../../src/timeunit';\nimport {parseUnitModelWithScale} from '../../util';\n\ndescribe('compile/axis', ()=> {\n  describe('grid()', function () {\n    it('should return true by default for continuous scale that is not binned', function () {\n      const grid = properties.grid('linear', {field: 'a', type: 'quantitative'});\n      assert.deepEqual(grid, true);\n    });\n\n    it('should return false by default for binned field', function () {\n      const grid = properties.grid('linear', {bin: true, field: 'a', type: 'quantitative'});\n      assert.deepEqual(grid, false);\n    });\n\n    it('should return false by default for a discrete scale', function () {\n      const grid = properties.grid('point', {field: 'a', type: 'quantitative'});\n      assert.deepEqual(grid, false);\n    });\n  });\n\n  describe('orient()', function () {\n    it('should return bottom for x by default', function () {\n      const orient = properties.orient('x');\n      assert.deepEqual(orient, 'bottom');\n    });\n\n    it('should return left for y by default', function () {\n      const orient = properties.orient('y');\n      assert.deepEqual(orient, 'left');\n    });\n  });\n\n  describe('tickCount', function() {\n    it('should return undefined by default for a binned field', () => {\n      const tickCount = properties.tickCount('x', {bin: {maxbins: 10}, field: 'a', type: 'quantitative'}, 'linear', {signal : 'a'});\n      assert.deepEqual(tickCount, {signal: 'ceil(a/20)'});\n    });\n\n    for (const timeUnit of ['month', 'hours', 'day', 'quarter'] as TimeUnit[]) {\n        it(`should return undefined by default for a temporal field with timeUnit=${timeUnit}`, () => {\n          const tickCount = properties.tickCount('x', {timeUnit, field: 'a', type: 'temporal'}, 'linear', {signal : 'a'});\n          assert.isUndefined(tickCount);\n        });\n    }\n\n    it('should return size/40 by default for linear scale', () => {\n      const tickCount = properties.tickCount('x', {field: 'a', type: 'quantitative'}, 'linear', {signal : 'a'});\n      assert.deepEqual(tickCount, {signal: 'ceil(a/40)'});\n    });\n\n    it('should return undefined by default for log scale', function () {\n      const tickCount = properties.tickCount('x', {field: 'a', type: 'quantitative'}, 'log', undefined);\n      assert.deepEqual(tickCount, undefined);\n    });\n\n    it('should return undefined by default for point scale', function () {\n      const tickCount = properties.tickCount('x', {field: 'a', type: 'quantitative'}, 'point', undefined);\n      assert.deepEqual(tickCount, undefined);\n    });\n  });\n\n  describe('title()', function () {\n    it('should add return fieldTitle by default', function () {\n      const title = properties.title(3, {field: 'a', type: \"quantitative\"}, {});\n      assert.deepEqual(title, 'a');\n    });\n\n    it('should add return fieldTitle by default', function () {\n      const title = properties.title(10, {aggregate: 'sum', field: 'a', type: \"quantitative\"}, {});\n      assert.deepEqual(title, 'Sum of a');\n    });\n\n    it('should add return fieldTitle by default and truncate', function () {\n      const title = properties.title(3, {aggregate: 'sum', field: 'a', type: \"quantitative\"}, {});\n      assert.deepEqual(title, 'Suâ€¦');\n    });\n  });\n\n  describe('values', () => {\n    it('should return correct timestamp values for DateTimes', () => {\n      const values = properties.values({values: [{year: 1970}, {year: 1980}]}, null, {field: 'a', type: 'temporal'}, \"x\");\n\n      assert.deepEqual(values, [\n        {\"signal\": \"datetime(1970, 0, 1, 0, 0, 0, 0)\"},\n        {\"signal\": \"datetime(1980, 0, 1, 0, 0, 0, 0)\"}\n      ]);\n    });\n\n    it('should simply return values for non-DateTime', () => {\n      const values = properties.values({values: [1, 2, 3, 4]}, null, {field: 'a', type: 'quantitative'}, \"x\");\n\n      assert.deepEqual(values, [1,2,3,4]);\n    });\n\n    it('should simply drop values when domain is specified', () => {\n      const model1 = parseUnitModelWithScale({\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"y\": {\n            \"type\": \"quantitative\",\n            \"field\": 'US_Gross',\n            \"scale\": {\"domain\":[-1,2]},\n            \"bin\": {\"extent\":[0,1]}\n          }\n        },\n        \"data\": {\"url\": \"data/movies.json\"}\n      });\n      const values = properties.values({}, model1, model1.fieldDef(\"y\"), \"y\");\n\n      assert.deepEqual(values, undefined);\n    });\n  });\n});\n"]}