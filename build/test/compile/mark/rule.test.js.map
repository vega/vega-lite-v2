{"version":3,"file":"rule.test.js","sourceRoot":"","sources":["../../../../test/compile/mark/rule.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable quotemark */\n\nimport {assert} from 'chai';\nimport {COLOR, X, Y} from '../../../src/channel';\nimport {rule} from '../../../src/compile/mark/rule';\nimport {parseUnitModelWithScaleAndLayoutSize} from '../../util';\n\ndescribe('Mark: Rule', function() {\n\n  describe('without encoding', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"rule\",\n      \"encoding\": {}\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should not show anything', function() {\n      assert.isUndefined(props.x);\n      assert.isUndefined(props.y);\n    });\n  });\n\n  describe('with x-only', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"rule\",\n      \"encoding\": {\"x\": {\"field\": \"a\", \"type\": \"quantitative\"}}\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create vertical rule that fits height', function() {\n      assert.deepEqual(props.x, {scale: X, field: 'a'});\n      assert.deepEqual(props.y, {field: {group: 'height'}});\n      assert.deepEqual(props.y2, {value: 0});\n    });\n  });\n\n  describe('with y-only', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"rule\",\n      \"encoding\": {\"y\": {\"field\": \"a\", \"type\": \"quantitative\"}}\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create horizontal rule that fits height', function() {\n      assert.deepEqual(props.y, {scale: Y, field: 'a'});\n      assert.deepEqual(props.x, {value: 0});\n      assert.deepEqual(props.x2, {field: {group: 'width'}});\n    });\n  });\n\n  describe('with x and x2 only', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"x\": {\"field\": \"a\", \"type\": \"quantitative\"},\n        \"x2\": {\"field\": \"a2\", \"type\": \"quantitative\"}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create horizontal rule on the axis', function() {\n      assert.deepEqual(props.x, {scale: X, field: 'a'});\n      assert.deepEqual(props.x2, {scale: X, field: 'a2'});\n      assert.deepEqual(props.y, {\n        mult: 0.5,\n        signal: 'height'\n      });\n    });\n  });\n\n  describe('with y and y2 only', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"y\": {\"field\": \"a\", \"type\": \"quantitative\"},\n        \"y2\": {\"field\": \"a2\", \"type\": \"quantitative\"}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create horizontal rules on the axis', function() {\n      assert.deepEqual(props.y, {scale: Y, field: 'a'});\n      assert.deepEqual(props.y2, {scale: Y, field: 'a2'});\n      assert.deepEqual(props.x, {\n        mult: 0.5,\n        signal: 'width'\n      });\n    });\n  });\n\n  describe('with x, x2, and y', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"x\": {\"field\": \"a\", \"type\": \"quantitative\"},\n        \"x2\": {\"field\": \"a2\", \"type\": \"quantitative\"},\n        \"y\": {\"field\": \"b\", \"type\": \"quantitative\"}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create horizontal rules', function () {\n      assert.deepEqual(props.x, {scale: X, field: 'a'});\n      assert.deepEqual(props.x2, {scale: X, field: 'a2'});\n      assert.deepEqual(props.y, {scale: Y, field: 'b'});\n    });\n  });\n\n  describe('with x, x2, y, and y2', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"x\": {\"field\": \"a\", \"type\": \"quantitative\"},\n        \"x2\": {\"field\": \"a2\", \"type\": \"quantitative\"},\n        \"y\": {\"field\": \"b\", \"type\": \"quantitative\"},\n        \"y2\": {\"field\": \"b2\", \"type\": \"quantitative\"}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create oblique rules', function () {\n      assert.deepEqual(props.x, {scale: X, field: 'a'});\n      assert.deepEqual(props.x2, {scale: X, field: 'a2'});\n      assert.deepEqual(props.y, {scale: Y, field: 'b'});\n      assert.deepEqual(props.y2, {scale: Y, field: 'b2'});\n    });\n  });\n\n  describe('with x and y', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"x\": {\"field\": \"a\", \"type\": \"quantitative\"},\n        \"y\": {\"field\": \"b\", \"type\": \"quantitative\"}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create oblique rules', function () {\n      assert.deepEqual(props.x, {scale: X, field: 'a'});\n      assert.deepEqual(props.y, {scale: Y, field: 'b'});\n    });\n  });\n\n  describe('with y, y2, and x', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"y\": {\"field\": \"a\", \"type\": \"quantitative\"},\n        \"y2\": {\"field\": \"a2\", \"type\": \"quantitative\"},\n        \"x\": {\"field\": \"b\", \"type\": \"quantitative\"}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create vertical rules', function() {\n      assert.deepEqual(props.y, {scale: Y, field: 'a'});\n      assert.deepEqual(props.y2, {scale: Y, field: 'a2'});\n      assert.deepEqual(props.x, {scale: X, field: 'b'});\n    });\n  });\n\n  describe('with nominal x, quantitative y with no y2', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"x\": {\"field\": \"a\", \"type\": \"ordinal\"},\n        \"y\": {\"field\": \"b\", \"type\": \"quantitative\"}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create vertical rule that emulates bar chart', function() {\n      assert.equal(model.markDef.orient, 'vertical');\n\n      assert.deepEqual(props.x, {scale: X, field: 'a', band: 0.5});\n      assert.deepEqual(props.y, {scale: Y, field: 'b'});\n      assert.deepEqual(props.y2, {scale: Y, value: 0});\n    });\n  });\n\n  describe('with nominal y, quantitative x with no y2', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"y\": {\"field\": \"a\", \"type\": \"ordinal\"},\n        \"x\": {\"field\": \"b\", \"type\": \"quantitative\"}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create horizontal rule that emulates bar chart', function() {\n      assert.equal(model.markDef.orient, 'horizontal');\n\n      assert.deepEqual(props.x, {scale: X, field: 'b'});\n      assert.deepEqual(props.x2, {scale: X, value: 0});\n      assert.deepEqual(props.y, {scale: Y, field: 'a', band: 0.5});\n    });\n  });\n\n\n  describe('horizontal stacked rule with color', function () {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"y\": {\"field\": \"a\", \"type\": \"ordinal\"},\n        \"x\": {\"aggregate\": \"sum\", \"field\": \"b\", \"type\": \"quantitative\"},\n        \"color\": {\"field\": \"Origin\", \"type\": \"nominal\"}\n      },\n      \"config\": {\n        \"stack\": \"zero\"\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should have the correct value for x, x2, and color', () => {\n      assert.deepEqual(props.x, {scale: 'x', field: 'sum_b_end'});\n      assert.deepEqual(props.x2, {scale: 'x', field: 'sum_b_start'});\n      assert.deepEqual(props.stroke, {scale: COLOR, field: 'Origin'});\n    });\n  });\n\n  describe('vertical stacked rule with color', function () {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"x\": {\"field\": \"a\", \"type\": \"ordinal\"},\n        \"y\": {\"aggregate\": \"sum\", \"field\": \"b\", \"type\": \"quantitative\"},\n        \"color\": {\"field\": \"Origin\", \"type\": \"nominal\"}\n      },\n      \"config\": {\n        \"stack\": \"zero\"\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should have the correct value for y, y2, and color', () => {\n      assert.deepEqual(props.y, {scale: 'y', field: 'sum_b_end'});\n      assert.deepEqual(props.y2, {scale: 'y', field: 'sum_b_start'});\n      assert.deepEqual(props.stroke, {scale: COLOR, field: 'Origin'});\n    });\n  });\n});\n"]}