{"version":3,"file":"bar.test.js","sourceRoot":"","sources":["../../../../test/compile/mark/bar.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable quotemark */\n\nimport {assert} from 'chai';\nimport {bar} from '../../../src/compile/mark/bar';\nimport * as log from '../../../src/log';\nimport {defaultBarConfig} from '../../../src/mark';\nimport {defaultScaleConfig} from '../../../src/scale';\nimport {parseUnitModelWithScaleAndLayoutSize} from '../../util';\n\ndescribe('Mark: Bar', function() {\n  describe('simple vertical', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"y\": {\"type\": \"quantitative\", \"field\": 'Acceleration', \"aggregate\": \"mean\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should draw bar, with y from zero to field value and with band value for x/width ', function() {\n      assert.deepEqual(props.x, {scale: 'x', field: 'Origin'});\n      assert.deepEqual(props.width, {scale: 'x', band: true});\n      assert.deepEqual(props.y, {scale: 'y', field: 'mean_Acceleration'});\n      assert.deepEqual(props.y2, {scale: 'y', value: 0});\n      assert.isUndefined(props.height);\n    });\n  });\n\n  it('should draw vertical bar, with y from zero to field value and bar with quantitative x, x2, and y', function () {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"field\": \"bin_start\", \"type\": \"quantitative\"},\n        \"x2\": {\"field\": \"bin_end\", \"type\": \"quantitative\"},\n        \"y\": {\"type\": \"quantitative\", \"field\": 'Acceleration'}\n      }\n    });\n    const props = bar.encodeEntry(model);\n    assert.deepEqual(props.x, {scale: 'x', field: 'bin_start'});\n    assert.deepEqual(props.x2, {scale: 'x', field: 'bin_end'});\n    assert.deepEqual(props.y, {scale: 'y', field: 'Acceleration'});\n    assert.deepEqual(props.y2, {scale: 'y', value: 0});\n    assert.isUndefined(props.height);\n  });\n\n  it('should draw vertical bar, with y from zero to field value and with band value for x/width when domain that includes zero is specified', function () {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"y\": {\"type\": \"quantitative\", \"field\": 'Acceleration', \"aggregate\": \"mean\", \"scale\": {\"domain\": [-1, 1]}}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    assert.deepEqual(props.x, {scale: 'x', field: 'Origin'});\n    assert.deepEqual(props.width, {scale: 'x', band: true});\n    assert.deepEqual(props.y, {scale: 'y', field: 'mean_Acceleration'});\n    assert.deepEqual(props.y2, {scale: 'y', value: 0});\n    assert.isUndefined(props.height);\n  });\n\n  it('should draw vertical bar, with y from \"group: height\" to field value when domain that excludes zero is specified', log.wrap((logger) => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"y\": {\"type\": \"quantitative\", \"field\": 'Acceleration', \"aggregate\": \"mean\", \"scale\": {\"domain\": [1, 2]}}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    assert.deepEqual(props.y, {scale: 'y', field: 'mean_Acceleration'});\n    assert.deepEqual(props.y2, {field: {group: 'height'}});\n    assert.isUndefined(props.height);\n\n    assert.equal(logger.warns[0], log.message.nonZeroScaleUsedWithLengthMark('bar', 'y', {zeroFalse: false}));\n  }));\n\n  it('should draw vertical bar, with y from \"group: height\" to field value when zero=false for y-scale', log.wrap((logger) => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"y\": {\"type\": \"quantitative\", \"field\": 'Acceleration', \"aggregate\": \"mean\", \"scale\": {\"zero\": false}}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    assert.deepEqual(props.y, {scale: 'y', field: 'mean_Acceleration'});\n    assert.deepEqual(props.y2, {field: {group: 'height'}});\n    assert.isUndefined(props.height);\n\n    assert.equal(logger.warns[0], log.message.nonZeroScaleUsedWithLengthMark('bar', 'y', {zeroFalse: true}));\n  }));\n\n  it('should draw vertical bar, with y from \"group: height\" to field value when y-scale type is log', log.wrap((logger) => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"y\": {\"type\": \"quantitative\", \"field\": 'Acceleration', \"aggregate\": \"mean\", \"scale\": {\"type\": \"log\"}}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    assert.deepEqual(props.y, {scale: 'y', field: 'mean_Acceleration'});\n    assert.deepEqual(props.y2, {field: {group: 'height'}});\n    assert.isUndefined(props.height);\n\n    assert.equal(logger.warns[0], log.message.nonZeroScaleUsedWithLengthMark('bar', 'y', {scaleType: 'log'}));\n  }));\n\n  describe('simple horizontal', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"x\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should draw bar from zero to field value and with band value for x/width', function() {\n      assert.deepEqual(props.y, {scale: 'y', field: 'Origin'});\n      assert.deepEqual(props.height, {scale: 'y', band: true});\n      assert.deepEqual(props.x, {scale: 'x', field: 'mean_Acceleration'});\n      assert.deepEqual(props.x2, {scale: 'x', value: 0});\n      assert.isUndefined(props.width);\n    });\n  });\n\n  it('should draw horizontal bar, with y from zero to field value and bar with quantitative x, x2, and y', function () {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"field\": \"bin_start\", \"type\": \"quantitative\"},\n        \"y2\": {\"field\": \"bin_end\", \"type\": \"quantitative\"},\n        \"x\": {\"type\": \"quantitative\", \"field\": 'Acceleration'}\n      }\n    });\n    const props = bar.encodeEntry(model);\n    assert.deepEqual(props.y, {scale: 'y', field: 'bin_start'});\n    assert.deepEqual(props.y2, {scale: 'y', field: 'bin_end'});\n    assert.deepEqual(props.x, {scale: 'x', field: 'Acceleration'});\n    assert.deepEqual(props.x2, {scale: 'x', value: 0});\n    assert.isUndefined(props.height);\n  });\n\n  describe('simple horizontal with point scale', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"field\": \"Origin\", \"type\": \"nominal\", \"scale\": {\"type\": \"point\"}},\n        \"x\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should draw bar from zero to field value and y with center position and height = rangeStep - 1', function() {\n      assert.deepEqual(props.yc, {scale: 'y', field: 'Origin'});\n      assert.deepEqual(props.height, {value: defaultScaleConfig.rangeStep - 1});\n      assert.deepEqual(props.x, {scale: 'x', field: 'mean_Acceleration'});\n      assert.deepEqual(props.x2, {scale: 'x', value: 0});\n      assert.isUndefined(props.width);\n    });\n  });\n\n  describe('simple horizontal with size value', function () {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"x\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"},\n        \"size\": {\"value\": 5}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should set height to 5 and center y', function () {\n      assert.deepEqual(props.height, {value: 5});\n      assert.deepEqual(props.yc, {scale: 'y', field: 'Origin', band: 0.5});\n    });\n  });\n\n  describe('simple horizontal with size value in mark def', function () {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": {\"type\": \"bar\", \"size\": 5},\n      \"encoding\": {\n        \"y\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"x\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should set height to 5 and center y', function () {\n      assert.deepEqual(props.height, {value: 5});\n      assert.deepEqual(props.yc, {scale: 'y', field: 'Origin', band: 0.5});\n    });\n  });\n\n  describe('simple horizontal with size field', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"x\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"},\n        \"size\": {\"aggregate\": \"mean\", \"field\": \"Horsepower\", \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n\n    it('should draw bar from zero to field value and with band value for x/width', function() {\n      assert.deepEqual(props.yc, {scale: 'y', field: 'Origin', band: 0.5});\n      assert.deepEqual(props.height, {scale: 'size', field: 'mean_Horsepower'});\n      assert.deepEqual(props.x, {scale: 'x', field: 'mean_Acceleration'});\n      assert.deepEqual(props.x2, {scale: 'x', value: 0});\n      assert.isUndefined(props.width);\n    });\n  });\n\n  describe('horizontal binned', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"bin\": true, \"field\": 'Horsepower', \"type\": \"quantitative\"},\n        \"x\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should draw bar with y and y2', function() {\n      assert.deepEqual(props.y2, {scale: 'y', field: 'bin_maxbins_10_Horsepower'});\n      assert.deepEqual(props.y, {scale: 'y', field: 'bin_maxbins_10_Horsepower_end', offset: defaultBarConfig.binSpacing});\n      assert.isUndefined(props.height);\n    });\n  });\n\n  describe('horizontal binned, sort descending', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"bin\": true, \"field\": 'Horsepower', \"type\": \"quantitative\", \"sort\": \"descending\"},\n        \"x\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should draw bar with y and y2', function() {\n      assert.deepEqual(props.y2, {scale: 'y', field: 'bin_maxbins_10_Horsepower', offset: defaultBarConfig.binSpacing});\n      assert.deepEqual(props.y, {scale: 'y', field: 'bin_maxbins_10_Horsepower_end'});\n      assert.isUndefined(props.height);\n    });\n  });\n\n  describe('horizontal binned, reverse', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"bin\": true, \"field\": 'Horsepower', \"type\": \"quantitative\", \"scale\": {\"reverse\": true}},\n        \"x\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should draw bar with y and y2', function() {\n      assert.deepEqual(props.y2, {scale: 'y', field: 'bin_maxbins_10_Horsepower', offset: defaultBarConfig.binSpacing});\n      assert.deepEqual(props.y, {scale: 'y', field: 'bin_maxbins_10_Horsepower_end'});\n      assert.isUndefined(props.height);\n    });\n  });\n\n  describe('vertical binned', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"bin\": true, \"field\": 'Horsepower', \"type\": \"quantitative\"},\n        \"y\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should draw bar with x and x2', function() {\n      assert.deepEqual(props.x2, {scale: 'x', field: 'bin_maxbins_10_Horsepower', offset: defaultBarConfig.binSpacing});\n      assert.deepEqual(props.x, {scale: 'x', field: 'bin_maxbins_10_Horsepower_end'});\n      assert.isUndefined(props.width);\n    });\n  });\n\n  describe('vertical binned, sort descending', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"bin\": true, \"field\": 'Horsepower', \"type\": \"quantitative\", \"sort\": \"descending\"},\n        \"y\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should draw bar with x and x2', function() {\n      assert.deepEqual(props.x2, {scale: 'x', field: 'bin_maxbins_10_Horsepower'});\n      assert.deepEqual(props.x, {scale: 'x', field: 'bin_maxbins_10_Horsepower_end', offset: defaultBarConfig.binSpacing});\n      assert.isUndefined(props.width);\n    });\n  });\n\n\n  describe('horizontal binned with ordinal', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"bin\": true, \"field\": 'Horsepower', \"type\": \"ordinal\"},\n        \"x\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should draw bar with y', function() {\n      assert.deepEqual(props.y, {scale: 'y', field: 'bin_maxbins_10_Horsepower_range'});\n      assert.deepEqual(props.height, {scale: 'y', band: true});\n    });\n  });\n\n  describe('vertical binned with ordinal', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"bin\": true, \"field\": 'Horsepower', \"type\": \"ordinal\"},\n        \"y\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should draw bar with y', function() {\n      assert.deepEqual(props.x, {scale: 'x', field: 'bin_maxbins_10_Horsepower_range'});\n      assert.deepEqual(props.width, {scale: 'x', band: true});\n    });\n  });\n\n\n  describe('horizontal binned with no spacing', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"bin\": true, \"field\": 'Horsepower', \"type\": \"quantitative\"},\n        \"x\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"}\n      },\n      \"config\": {\"bar\": {\"binSpacing\": 0}}\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should draw bar with y and y2', function() {\n      assert.deepEqual(props.y2, {scale: 'y', field: 'bin_maxbins_10_Horsepower'});\n      assert.deepEqual(props.y, {scale: 'y', field: 'bin_maxbins_10_Horsepower_end'});\n      assert.isUndefined(props.height);\n    });\n  });\n\n  describe('vertical binned with no spacing', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"bin\": true, \"field\": 'Horsepower', \"type\": \"quantitative\"},\n        \"y\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"}\n      },\n      \"config\": {\"bar\": {\"binSpacing\": 0}}\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should draw bar with x and x2', function() {\n      assert.deepEqual(props.x2, {scale: 'x', field: 'bin_maxbins_10_Horsepower'});\n      assert.deepEqual(props.x, {scale: 'x', field: 'bin_maxbins_10_Horsepower_end'});\n      assert.isUndefined(props.width);\n    });\n  });\n\n  describe('simple horizontal binned with size', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"bin\": true, \"field\": 'Horsepower', \"type\": \"quantitative\"},\n        \"x\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"},\n        \"size\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should draw bar with y centered on bin_mid and height = size field', function() {\n      assert.deepEqual(props.yc, {signal: '(scale(\"y\", datum[\"bin_maxbins_10_Horsepower\"]) + scale(\"y\", datum[\"bin_maxbins_10_Horsepower_end\"]))/2'});\n      assert.deepEqual(props.height, {scale: 'size', field: 'mean_Acceleration'});\n    });\n  });\n\n  describe('vertical binned with size', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"bin\": true, \"field\": 'Horsepower', \"type\": \"quantitative\"},\n        \"y\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"},\n        \"size\": {\"aggregate\": \"mean\", \"field\": 'Acceleration', \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should draw bar with x centered on bin_mid and width = size field', function() {\n      assert.deepEqual(props.xc, {signal: '(scale(\\\"x\\\", datum[\\\"bin_maxbins_10_Horsepower\\\"]) + scale(\\\"x\\\", datum[\\\"bin_maxbins_10_Horsepower_end\\\"]))/2'});\n      assert.deepEqual(props.width, {scale: 'size', field: 'mean_Acceleration'});\n    });\n  });\n\n  describe('vertical, with log', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"y\": {\"scale\": {\"type\": 'log'}, \"type\": \"quantitative\", \"field\": 'Acceleration', \"aggregate\": \"mean\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should end on axis and has no height', function() {\n      assert.deepEqual(props.y2, {field: {group: 'height'}});\n      assert.isUndefined(props.height);\n    });\n  });\n\n  describe('horizontal, with log', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"x\": {\"scale\": {\"type\": 'log'}, \"type\": \"quantitative\", \"field\": 'Acceleration', \"aggregate\": \"mean\"}\n      }\n    });\n\n    const props = bar.encodeEntry(model);\n\n    it('should end on axis and has no width', function() {\n      assert.deepEqual(props.x2, {value: 0});\n      assert.isUndefined(props.width);\n    });\n  });\n\n  describe('vertical, with fit mode', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"width\": 120,\n      \"height\": 120,\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"y\": {\"aggregate\": \"mean\", \"field\": \"Horsepower\", \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should use x and with band true', () => {\n      assert.deepEqual(props.x, {\n        scale: 'x',\n        field: 'Origin',\n      });\n      assert.deepEqual(props.width, {\n        scale: 'x',\n        band: true,\n      });\n    });\n  });\n\n  describe('horizontal, with fit mode', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"width\": 120,\n      \"height\": 120,\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"x\": {\"aggregate\": \"mean\", \"field\": \"Horsepower\", \"type\": \"quantitative\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should use y with band true', () => {\n      assert.deepEqual(props.y, {\n        scale: 'y',\n        field: 'Origin',\n      });\n      assert.deepEqual(props.height, {\n        scale: 'y',\n        band: true,\n      });\n    });\n  });\n\n  describe('vertical with zero=false', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"y\": {\"scale\": {\"zero\": false}, \"type\": \"quantitative\", \"field\": 'Acceleration', \"aggregate\": \"mean\"}\n      }\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should end on axis nad have no height', function() {\n      assert.deepEqual(props.y2, {field: {group: 'height'}});\n      assert.isUndefined(props.height);\n    });\n  });\n\n  describe('horizontal with zero=false', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"data\": {\"url\": 'data/cars.json'},\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"x\": {\"scale\": {\"zero\": false}, \"type\": \"quantitative\", \"field\": 'Acceleration', \"aggregate\": \"mean\"}\n      }\n    });\n\n    const props = bar.encodeEntry(model);\n    it('should end on axis and have no width', function() {\n      assert.deepEqual(props.x2, {value: 0});\n      assert.isUndefined(props.width);\n    });\n  });\n\n  describe('1D vertical', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"bar\",\n        \"encoding\": {\"y\": {\"type\": \"quantitative\", \"field\": 'US_Gross', \"aggregate\": \"sum\"}},\n        \"data\": {\"url\": 'data/movies.json'}\n      });\n    const props = bar.encodeEntry(model);\n\n    it('should have y end on axis, have no-height and have x-offset', function() {\n      assert.deepEqual(props.y, {scale: 'y', field: 'sum_US_Gross'});\n      assert.deepEqual(props.y2, {scale: 'y', value: 0});\n      assert.isUndefined(props.height);\n      assert.deepEqual(props.xc, {\n        mult: 0.5,\n        signal: 'width'\n      });\n    });\n  });\n\n  describe('1D vertical with size value', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"y\": {\"type\": \"quantitative\", \"field\": 'US_Gross', \"aggregate\": \"sum\"},\n          \"size\": {\"value\": 5}\n        },\n        \"data\": {\"url\": 'data/movies.json'}\n      });\n    const props = bar.encodeEntry(model);\n\n    it('should have width = 5', function() {\n      assert.deepEqual(props.width, {value: 5});\n    });\n  });\n\n  describe('1D vertical with barSize config', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n        \"data\": {\"url\": 'data/movies.json'},\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"y\": {\"type\": \"quantitative\", \"field\": 'US_Gross', \"aggregate\": \"sum\"}\n        },\n        \"config\": {\n          \"bar\": {\"discreteBandSize\": 5}\n        }\n      });\n    const props = bar.encodeEntry(model);\n\n    it('should have width = 5', function() {\n      assert.deepEqual(props.width, {value: 5});\n    });\n  });\n\n  describe('1D horizontal', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"bar\",\n      \"encoding\": {\"x\": {\"type\": \"quantitative\", \"field\": 'US_Gross', \"aggregate\": 'sum'}},\n      \"data\": {\"url\": 'data/movies.json'}\n    });\n    const props = bar.encodeEntry(model);\n\n    it('should end on axis, have no width, and have y-offset', function() {\n      assert.deepEqual(props.x, {scale: 'x', field: 'sum_US_Gross'});\n      assert.deepEqual(props.x2, {scale: 'x', value: 0});\n      assert.isUndefined(props.width);\n      assert.deepEqual(props.yc, {\n        mult: 0.5,\n        signal: 'height'\n      });\n    });\n  });\n\n  describe('QxQ horizontal', function() {\n    // This is generally a terrible idea, but we should still test\n    // if the output show expected results\n\n    const model = parseUnitModelWithScaleAndLayoutSize({\n        \"data\": {\"url\": 'data/cars.json'},\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"x\": {\"field\": 'Acceleration', \"type\": \"quantitative\"},\n          \"y\": {\"field\": 'Horsepower', \"type\": \"quantitative\"}\n        },\n        \"config\": {\n          \"mark\": {\"orient\": \"horizontal\"}\n        }\n      });\n    const props = bar.encodeEntry(model);\n\n    it('should produce horizontal bar using x, x2', function() {\n      assert.deepEqual(props.x, {scale: 'x', field: 'Acceleration'});\n      assert.deepEqual(props.x2, {scale: 'x', value: 0});\n      assert.deepEqual(props.yc, {scale: 'y', field: 'Horsepower'});\n      assert.deepEqual(props.height, {value: defaultBarConfig.continuousBandSize});\n    });\n  });\n\n  describe('QxQ vertical', function() {\n    // This is generally a terrible idea, but we should still test\n    // if the output show expected results\n\n    const model = parseUnitModelWithScaleAndLayoutSize({\n        \"data\": {\"url\": 'data/cars.json'},\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"x\": {\"field\": 'Acceleration', \"type\": \"quantitative\"},\n          \"y\": {\"field\": 'Horsepower', \"type\": \"quantitative\"}\n        },\n        \"config\": {\n          \"mark\": {\"orient\": \"vertical\"}\n        }\n      });\n    const props = bar.encodeEntry(model);\n\n    it('should produce horizontal bar using x, x2', function() {\n      assert.deepEqual(props.xc, {scale: 'x', field: 'Acceleration'});\n      assert.deepEqual(props.width, {value: defaultBarConfig.continuousBandSize});\n      assert.deepEqual(props.y, {scale: 'y', field: 'Horsepower'});\n      assert.deepEqual(props.y2, {scale: 'y', value: 0});\n    });\n  });\n\n  describe('OxN', function() {\n    // This is generally a terrible idea, but we should still test\n    // if the output show expected results\n    it('should produce vertical bar using x, width', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"data\": {\"url\": 'data/cars.json'},\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"x\": {\"field\": 'Origin', \"type\": \"nominal\"},\n          \"y\": {\"field\": 'Cylinders', \"type\": \"ordinal\"}\n        }\n      });\n      const props = bar.encodeEntry(model);\n\n      assert.deepEqual(props.x, {scale: 'x', field: 'Origin'});\n      assert.deepEqual(props.width, {scale: 'x', band: true});\n      assert.deepEqual(props.y, {scale: 'y', field: 'Cylinders'});\n      assert.deepEqual(props.height, {scale: 'y', band: true});\n    });\n  });\n\n  describe('ranged bar', function() {\n    // TODO: gantt chart with temporal\n\n    // TODO: gantt chart with ordinal\n\n    it('vertical bars should work with aggregate', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"data\": {\"url\": \"data/population.json\"},\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"x\": {\"field\": \"age\", \"type\": \"ordinal\"},\n          \"y\": {\"field\": \"people\", \"aggregate\": \"q1\", \"type\": \"quantitative\"},\n          \"y2\": {\"field\": \"people\", \"aggregate\": \"q3\", \"type\": \"quantitative\"}\n        }\n      });\n\n      const props = bar.encodeEntry(model);\n      assert.deepEqual(props.x, {scale: 'x', field: 'age'});\n      assert.deepEqual(props.y, {scale: 'y', field: 'q1_people'});\n      assert.deepEqual(props.y2, {scale: 'y', field: 'q3_people'});\n    });\n\n    it('horizontal bars should work with aggregate', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"data\": {\"url\": \"data/population.json\"},\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"y\": {\"field\": \"age\", \"type\": \"ordinal\"},\n          \"x\": {\"field\": \"people\", \"aggregate\": \"q1\", \"type\": \"quantitative\"},\n          \"x2\": {\"field\": \"people\", \"aggregate\": \"q3\", \"type\": \"quantitative\"}\n        }\n      });\n\n      const props = bar.encodeEntry(model);\n      assert.deepEqual(props.y, {scale: 'y', field: 'age'});\n      assert.deepEqual(props.x, {scale: 'x', field: 'q1_people'});\n      assert.deepEqual(props.x2, {scale: 'x', field: 'q3_people'});\n    });\n  });\n});\n"]}