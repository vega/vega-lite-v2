{"version":3,"file":"init.test.js","sourceRoot":"","sources":["../../../../test/compile/mark/init.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable quotemark */\n\nimport * as log from '../../../src/log';\n\nimport {assert} from 'chai';\nimport {CIRCLE, Mark, POINT, PRIMITIVE_MARKS, SQUARE, TICK} from '../../../src/mark';\nimport {without} from '../../../src/util';\nimport {parseUnitModelWithScaleAndLayoutSize} from '../../util';\n\ndescribe('compile/mark/init', function() {\n  describe('defaultOpacity', () => {\n    it('should return 0.7 by default for unaggregated point, tick, circle, and square', () => {\n      for (const mark of [POINT, TICK, CIRCLE, SQUARE]) {\n        const model = parseUnitModelWithScaleAndLayoutSize({\n          mark,\n          \"encoding\": {\n            \"y\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n            \"x\": {\"type\": \"quantitative\", \"field\": \"bar\"}\n          },\n        });\n        assert.equal(model.markDef.opacity, 0.7);\n      }\n    });\n\n    it('should return undefined by default for aggregated point, tick, circle, and square', () => {\n      for (const mark of [POINT, TICK, CIRCLE, SQUARE]) {\n        const model = parseUnitModelWithScaleAndLayoutSize({\n          mark,\n          \"encoding\": {\n            \"y\": {\"aggregate\": \"mean\", \"type\": \"quantitative\", \"field\": \"foo\"},\n            \"x\": {\"type\": \"nominal\", \"field\": \"bar\"}\n          },\n        });\n        assert.equal(model.markDef.opacity, undefined);\n      }\n    });\n\n    it('should use specified opacity', () => {\n      for (const mark of [POINT, TICK, CIRCLE, SQUARE]) {\n        const model = parseUnitModelWithScaleAndLayoutSize({\n          mark: {type: mark, opacity: 0.9},\n          \"encoding\": {\n            \"y\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n            \"x\": {\"type\": \"quantitative\", \"field\": \"bar\"}\n          },\n        });\n        assert.equal(model.markDef.opacity, 0.9);\n      }\n    });\n\n    it('should return undefined by default for other marks', () => {\n      const otherMarks = without(PRIMITIVE_MARKS, [POINT, TICK, CIRCLE, SQUARE]);\n      for (const mark of otherMarks) {\n        const model = parseUnitModelWithScaleAndLayoutSize({\n          mark,\n          \"encoding\": {\n            \"y\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n            \"x\": {\"type\": \"nominal\", \"field\": \"bar\"}\n          },\n        });\n        assert.equal(model.markDef.opacity, undefined);\n      }\n    });\n  });\n\n  describe('orient', function() {\n    it('should return correct default for QxQ', log.wrap((localLogger) => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"y\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n          \"x\": {\"type\": \"quantitative\", \"field\": \"bar\"}\n        },\n      });\n      assert.equal(model.markDef.orient, 'vertical');\n    }));\n\n    it('should return correct default for empty plot', log.wrap((localLogger) => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"bar\",\n        encoding: {}\n      });\n      assert.equal(model.markDef.orient, undefined);\n    }));\n\n    it('should return correct orient for bar with both axes discrete', log.wrap((localLogger) => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"x\": {\"type\": \"ordinal\", \"field\": \"foo\"},\n          \"y\": {\"type\": \"ordinal\", \"field\": \"bar\"}\n        },\n      });\n      assert.equal(model.markDef.orient, undefined);\n    }));\n\n\n    it('should return correct orient for vertical bar', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"y\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n          \"x\": {\"type\": \"ordinal\", \"field\": \"bar\"}\n        },\n      });\n      assert.equal(model.markDef.orient, 'vertical');\n    });\n\n    it('should return correct orient for horizontal bar', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"x\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n          \"y\": {\"type\": \"ordinal\", \"field\": \"bar\"}\n        },\n      });\n      assert.equal(model.markDef.orient, 'horizontal');\n    });\n\n    it('should return correct orient for vertical bar with raw temporal dimension', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"y\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n          \"x\": {\"type\": \"temporal\", \"field\": \"bar\"}\n        },\n      });\n      assert.equal(model.markDef.orient, 'vertical');\n    });\n\n    it('should return correct orient for horizontal bar with raw temporal dimension', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"x\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n          \"y\": {\"type\": \"temporal\", \"field\": \"bar\"}\n        },\n      });\n      assert.equal(model.markDef.orient, 'horizontal');\n    });\n\n    it('should return correct orient for vertical tick', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"tick\",\n        \"encoding\": {\n          \"x\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n          \"y\": {\"type\": \"ordinal\", \"field\": \"bar\"}\n        },\n      });\n      assert.equal(model.markDef.orient, 'vertical');\n    });\n\n    it('should return correct orient for vertical tick with bin', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"tick\",\n        \"encoding\": {\n          \"x\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n          \"y\": {\"type\": \"quantitative\", \"field\": \"bar\", \"bin\": true}\n        },\n      });\n      assert.equal(model.markDef.orient, 'vertical');\n    });\n\n    it('should return correct orient for vertical tick of continuous timeUnit dotplot', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"tick\",\n        \"encoding\": {\n          \"x\": {\"type\": \"temporal\", \"field\": \"foo\", \"timeUnit\": \"yearmonthdate\"},\n          \"y\": {\"type\": \"ordinal\", \"field\": \"bar\"}\n        },\n      });\n      assert.equal(model.markDef.orient, 'vertical');\n    });\n\n    it('should return correct orient for horizontal tick', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"tick\",\n        \"encoding\": {\n          \"y\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n          \"x\": {\"type\": \"ordinal\", \"field\": \"bar\"}\n        },\n      });\n      assert.equal(model.markDef.orient, 'horizontal');\n    });\n\n    it('should return correct orient for vertical rule', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"rule\",\n        \"encoding\": {\n          \"x\": {\"value\": 0},\n        },\n      });\n      assert.equal(model.markDef.orient, 'vertical');\n    });\n\n    it('should return correct orient for horizontal rule', function () {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"rule\",\n        \"encoding\": {\n          \"y\": {\"value\": 0},\n        },\n      });\n      assert.equal(model.markDef.orient, 'horizontal');\n    });\n\n    it('should return undefined for line segment rule', function () {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"rule\",\n        \"encoding\": {\n          \"y\": {\"value\": 0},\n          \"x\": {\"value\": 0},\n          \"y2\": {\"value\": 100},\n          \"x2\": {\"value\": 100},\n        },\n      });\n      assert.equal(model.markDef.orient, undefined);\n    });\n\n    it('should return undefined for line segment rule with only x and y without x2, y2', function () {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"rule\",\n        \"encoding\": {\n          \"y\": {\"value\": 0},\n          \"x\": {\"value\": 0}\n        },\n      });\n      assert.equal(model.markDef.orient, undefined);\n    });\n\n    it('should return correct orient for horizontal rules without x2 ', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"rule\",\n        \"encoding\": {\n          \"x\": {\"field\": \"b\", \"type\": \"quantitative\"},\n          \"y\": {\"field\": \"a\", \"type\": \"ordinal\"},\n        },\n      });\n\n      assert.equal(model.markDef.orient, 'horizontal');\n    });\n\n    it('should return correct orient for vertical rules without y2 ', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"rule\",\n        \"encoding\": {\n          \"y\": {\"field\": \"b\", \"type\": \"quantitative\"},\n          \"x\": {\"field\": \"a\", \"type\": \"ordinal\"},\n        },\n      });\n\n      assert.equal(model.markDef.orient, 'vertical');\n    });\n\n    it('should return correct orient for vertical rule with range', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"rule\",\n        \"encoding\": {\n          \"x\": {\"type\": \"ordinal\", \"field\": \"foo\"},\n          \"y\": {\"type\": \"quantitative\", \"field\": \"bar\"},\n          \"y2\": {\"type\": \"quantitative\", \"field\": \"baz\"}\n        },\n      });\n      assert.equal(model.markDef.orient, 'vertical');\n    });\n\n    it('should return correct orient for horizontal rule with range', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"rule\",\n        \"encoding\": {\n          \"y\": {\"type\": \"ordinal\", \"field\": \"foo\"},\n          \"x\": {\"type\": \"quantitative\", \"field\": \"bar\"},\n          \"x2\": {\"type\": \"quantitative\", \"field\": \"baz\"}\n        },\n      });\n      assert.equal(model.markDef.orient, 'horizontal');\n    });\n\n    it('should return correct orient for horizontal rule with range and no ordinal', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"rule\",\n        \"encoding\": {\n          \"x\": {\"type\": \"quantitative\", \"field\": \"bar\"},\n          \"x2\": {\"type\": \"quantitative\", \"field\": \"baz\"}\n        },\n      });\n      assert.equal(model.markDef.orient, 'horizontal');\n    });\n\n    it('should return correct orient for vertical rule with range and no ordinal', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"rule\",\n        \"encoding\": {\n          \"y\": {\"type\": \"quantitative\", \"field\": \"bar\"},\n          \"y2\": {\"type\": \"quantitative\", \"field\": \"baz\"}\n        },\n      });\n      assert.equal(model.markDef.orient, 'vertical');\n    });\n  });\n\n  describe('cursor', function() {\n    it('cursor should be undefined when no href channel defined', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"y\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n          \"x\": {\"type\": \"temporal\", \"field\": \"bar\"}\n        },\n      });\n      assert.equal(model.markDef.cursor, undefined);\n    });\n\n    it('should return pointer cursor when href channel present', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"bar\",\n        \"selection\": {\"test\": {\"type\": \"single\"}},\n        \"encoding\": {\n          \"x\": {\"field\": \"a\", \"type\": \"ordinal\"},\n          \"y\": {\"field\": \"b\", \"type\": \"quantitative\"},\n          \"href\": {\n            \"condition\": {\"selection\": \"test\", \"value\": \"https://vega.github.io/schema/vega-lite/v2.json\"},\n            \"field\": \"a\",\n            \"type\": \"ordinal\"\n          },\n        },\n      });\n      assert.equal(model.markDef.cursor, 'pointer');\n    });\n\n    it('should return specified cursor when href channel present but cursor specified', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": {\"type\": \"bar\", \"cursor\": \"auto\"},\n        \"selection\": {\"test\": {\"type\": \"single\"}},\n        \"encoding\": {\n          \"x\": {\"field\": \"a\", \"type\": \"ordinal\"},\n          \"y\": {\"field\": \"b\", \"type\": \"quantitative\"},\n          \"href\": {\n            \"condition\": {\"selection\": \"test\", \"value\": \"http://www.google.com\"},\n            \"field\": \"a\",\n            \"type\": \"ordinal\"\n          },\n        },\n      });\n      assert.equal(model.markDef.cursor, 'auto');\n    });\n\n    it('should return pointer cursor when href channel specified in mark definition', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": {\"type\": \"bar\", \"href\": \"http://www.google.com\"},\n        \"encoding\": {\n          \"y\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n          \"x\": {\"type\": \"temporal\", \"field\": \"bar\"}\n        }\n      });\n      assert.equal(model.markDef.cursor, 'pointer');\n    });\n\n    it('should return specified cursor when href channel specified in mark definition but cursor also specified in mark', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": {\"type\": \"bar\", \"href\": \"http://www.google.com\", \"cursor\": \"auto\"},\n        \"encoding\": {\n          \"y\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n          \"x\": {\"type\": \"temporal\", \"field\": \"bar\"}\n        }\n      });\n      assert.equal(model.markDef.cursor, 'auto');\n    });\n\n    it('should return pointer cursor when href channel specified in mark config', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"config\": {\n          \"mark\": {\n            \"href\": \"http://www.google.com\"\n          }\n        },\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"y\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n          \"x\": {\"type\": \"temporal\", \"field\": \"bar\"}\n        }\n      });\n      assert.equal(model.markDef.cursor, 'pointer');\n    });\n\n    it('should return specified cursor when href channel specified in mark config but cursor also specified in mark', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"config\": {\n          \"mark\": {\n            \"href\": \"http://www.google.com\"\n          }\n        },\n        \"mark\": {\"type\": \"bar\", \"cursor\": \"auto\"},\n        \"encoding\": {\n          \"y\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n          \"x\": {\"type\": \"temporal\", \"field\": \"bar\"}\n        }\n      });\n      assert.equal(model.markDef.cursor, 'auto');\n    });\n\n    it('should not specify cursor in the markdef if defined in the config', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"config\": {\n          \"mark\": {\n            \"href\": \"http://www.google.com\",\n            \"cursor\": \"auto\"\n          }\n        },\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"y\": {\"type\": \"quantitative\", \"field\": \"foo\"},\n          \"x\": {\"type\": \"temporal\", \"field\": \"bar\"}\n        }\n      });\n      assert.equal(model.markDef.cursor, undefined);\n    });\n\n  });\n});\n\n\n"]}