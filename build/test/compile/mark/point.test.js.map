{"version":3,"file":"point.test.js","sourceRoot":"","sources":["../../../../test/compile/mark/point.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable quotemark */\n\nimport {assert} from 'chai';\nimport {COLOR, SHAPE, SIZE, X, Y} from '../../../src/channel';\nimport {circle, point, square} from '../../../src/compile/mark/point';\nimport {Encoding} from '../../../src/encoding';\nimport {defaultMarkConfig} from '../../../src/mark';\nimport {NormalizedUnitSpec} from '../../../src/spec';\nimport {parseUnitModelWithScaleAndLayoutSize} from '../../util';\n\ndescribe('Mark: Point', function() {\n\n  function pointXY(moreEncoding: Encoding<string> = {}): NormalizedUnitSpec {\n    return {\n      \"mark\": \"point\",\n      \"encoding\": {\n          \"x\": {\"field\": \"year\", \"type\": \"ordinal\"},\n          \"y\": {\"field\": \"yield\", \"type\": \"quantitative\"},\n          ...moreEncoding,\n      },\n      \"data\": {\"url\": \"data/barley.json\"}\n    };\n  }\n\n  describe('with x', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"point\",\n      \"encoding\": {\"x\": {\"field\": \"year\", \"type\": \"ordinal\"}},\n      \"data\": {\"url\": \"data/barley.json\"}\n    });\n\n    const props = point.encodeEntry(model);\n\n    it('should be centered on y', function() {\n      assert.deepEqual(props.y, {\n        mult: 0.5,\n        signal: 'height'\n      });\n    });\n\n    it('should scale on x', function() {\n      assert.deepEqual(props.x, {scale: X, field: 'year'});\n    });\n  });\n\n  describe('with stacked x', function() {\n    // This is a simplified example for stacked point.\n    // In reality this will be used as stacked's overlayed marker\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"point\",\n      \"encoding\": {\n        \"x\": {\"aggregate\": \"sum\", \"field\": \"a\", \"type\": \"quantitative\"},\n        \"color\": {\"field\": \"b\", \"type\": \"ordinal\"}\n      },\n      \"data\": {\"url\": \"data/barley.json\"},\n      \"config\": {\"stack\": \"zero\"}\n    });\n\n    const props = point.encodeEntry(model);\n\n    it('should use stack_end on x', function() {\n      assert.deepEqual(props.x, {scale: X, field: 'sum_a_end'});\n    });\n  });\n\n  describe('with y', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"point\",\n      \"encoding\": {\"y\": {\"field\": \"year\", \"type\": \"ordinal\"}},\n      \"data\": {\"url\": \"data/barley.json\"}\n    });\n\n    const props = point.encodeEntry(model);\n\n    it('should be centered on x', function() {\n      assert.deepEqual(props.x, {\n        mult: 0.5,\n        signal: 'width'\n      });\n    });\n\n    it('should scale on y', function() {\n      assert.deepEqual(props.y, {scale: Y, field: 'year'});\n    });\n  });\n\n  describe('with stacked y', function() {\n    // This is a simplified example for stacked point.\n    // In reality this will be used as stacked's overlayed marker\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"point\",\n      \"encoding\": {\n        \"y\": {\"aggregate\": \"sum\", \"field\": \"a\", \"type\": \"quantitative\"},\n        \"color\": {\"field\": \"b\", \"type\": \"ordinal\"}\n      },\n      \"data\": {\"url\": \"data/barley.json\"},\n      \"config\": {\"stack\": \"zero\"}\n    });\n\n    const props = point.encodeEntry(model);\n\n    it('should use stack_end on y', function() {\n      assert.deepEqual(props.y, {scale: Y, field: 'sum_a_end'});\n    });\n  });\n\n  describe('with x and y', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize(pointXY());\n    const props = point.encodeEntry(model);\n\n    it('should scale on x', function() {\n      assert.deepEqual(props.x, {scale: X, field: 'year'});\n    });\n\n    it('should scale on y', function() {\n      assert.deepEqual(props.y, {scale: Y, field: 'yield'});\n    });\n\n    it('should be an unfilled circle', function() {\n      assert.deepEqual(props.fill, {value: 'transparent'});\n      assert.deepEqual(props.stroke, {value: defaultMarkConfig.color});\n    });\n  });\n\n  describe('with band x and quantitative y', () => {\n    it('should offset band position by half band', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"data\": {\"url\": \"data/barley.json\"},\n        \"mark\": \"point\",\n        \"encoding\":{\n          \"x\": {\"field\": \"year\", \"type\": \"ordinal\", \"scale\": {\"type\": \"band\"}},\n          \"y\": {\"field\": \"yield\", \"type\": \"quantitative\"}\n        }\n      });\n      const props = point.encodeEntry(model);\n      assert.deepEqual(props.x, {scale: 'x', field: 'year', band: 0.5});\n    });\n  });\n\n  describe('with x, y, size', function () {\n    const model = parseUnitModelWithScaleAndLayoutSize(pointXY({\n      \"size\": {\"aggregate\": \"count\", \"type\": \"quantitative\"}\n    }));\n    const props = point.encodeEntry(model);\n\n    it('should have scale for size', function () {\n      assert.deepEqual(props.size, {scale: SIZE, field: 'count_*'});\n    });\n  });\n\n  describe('with x, y, color', function () {\n    const model = parseUnitModelWithScaleAndLayoutSize(pointXY({\n      \"color\": {\"field\": \"yield\", \"type\": \"quantitative\"}\n    }));\n    const props = point.encodeEntry(model);\n\n    it('should have scale for color', function () {\n      assert.deepEqual(props.stroke, {scale: COLOR, field: 'yield'});\n    });\n  });\n\n  describe('with x, y, and condition-only color', function () {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      ...pointXY({\n        \"color\": {\"condition\": {\"selection\": \"test\", \"field\": \"yield\", \"type\": \"quantitative\"}}\n      }),\n      selection: {test: {type: 'single'}}\n    });\n    model.parseSelection();\n    const props = point.encodeEntry(model);\n\n    it('should have one condition for color with scale for \"yield\"', function () {\n      assert.isArray(props.stroke);\n      assert.equal(props.stroke['length'], 2);\n      assert.equal(props.stroke[0].scale, COLOR);\n      assert.equal(props.stroke[0].field, 'yield');\n    });\n  });\n\n  describe('with x, y, and condition-only color', function () {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      ...pointXY({\n        \"color\": {\"condition\": {\"test\": \"true\", \"field\": \"yield\", \"type\": \"quantitative\"}}\n      })\n    });\n    model.parseSelection();\n    const props = point.encodeEntry(model);\n\n    it('should have one condition for color with scale for \"yield\"', function () {\n      assert.isArray(props.stroke);\n      assert.equal(props.stroke['length'], 2);\n      assert.equal(props.stroke[0].test, \"true\");\n      assert.equal(props.stroke[1].value, \"#4c78a8\");\n    });\n  });\n\n  describe('with x, y, shape', function () {\n    const model = parseUnitModelWithScaleAndLayoutSize(pointXY({\n      \"shape\": {\"field\": \"site\", \"type\": \"nominal\"}\n    }));\n    const props = point.encodeEntry(model);\n\n    it('should have scale for shape', function () {\n      assert.deepEqual(props.shape, {scale: SHAPE, field: 'site'});\n    });\n  });\n\n  describe('with constant color, shape, and size', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize(pointXY({\n      \"shape\": {\"value\": \"circle\"},\n      \"color\": {\"value\": \"red\"},\n      \"size\": {\"value\": 23}\n    }));\n    const props = point.encodeEntry(model);\n    it('should correct shape, color and size', function () {\n      assert.deepEqual(props.shape, {value: \"circle\"});\n      assert.deepEqual(props.stroke, {value: \"red\"});\n      assert.deepEqual(props.size, {value: 23});\n    });\n  });\n\n  describe('with tooltip', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"point\",\n      \"encoding\": {\n        \"tooltip\": {\"value\": \"foo\"}\n      }\n    });\n    const props = point.encodeEntry(model);\n\n    it('should pass tooltip value to encoding', () => {\n      assert.deepEqual(props.tooltip, {value: \"foo\"});\n    });\n  });\n\n  describe('with href', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"point\",\n      \"encoding\": {\n        \"href\": {\"value\": \"https://idl.cs.washington.edu/\"}\n      }\n    });\n    const props = point.encodeEntry(model);\n\n    it('should pass href value to encoding', () => {\n      assert.deepEqual(props.href, {value: 'https://idl.cs.washington.edu/'});\n    });\n  });\n});\n\ndescribe('Mark: Square', function() {\n  it('should have correct shape', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"square\",\n      \"encoding\": {\n        \"color\": {\"value\": \"blue\"}\n      }\n    });\n    const props = square.encodeEntry(model);\n\n    assert.propertyVal(props.shape, 'value', 'square');\n  });\n\n  it('should be filled by default', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"square\",\n      \"encoding\": {\n        \"color\": {\"value\": \"blue\"}\n      }\n    });\n    const props = square.encodeEntry(model);\n\n    assert.propertyVal(props.fill, 'value', 'blue');\n  });\n\n  it('with config.mark.filled:false should have transparent fill', function() {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"square\",\n      \"encoding\": {\n        \"color\": {\"value\": \"blue\"}\n      },\n      \"config\" : {\n        \"mark\" : {\n          \"filled\" : false\n        }\n      }\n    });\n\n    const props = square.encodeEntry(model);\n\n    assert.propertyVal(props.stroke, 'value', 'blue');\n    assert.propertyVal(props.fill, 'value', 'transparent');\n  });\n});\n\ndescribe('Mark: Circle', function() {\n  const model = parseUnitModelWithScaleAndLayoutSize({\n    \"mark\": \"circle\",\n    \"encoding\": {\n      \"color\": {\"value\": \"blue\"}\n    }\n  });\n  const props = circle.encodeEntry(model);\n\n  it('should have correct shape', function() {\n    assert.propertyVal(props.shape, 'value', 'circle');\n  });\n\n  it('should be filled by default', function() {\n    assert.propertyVal(props.fill, 'value', 'blue');\n  });\n\n  it('with config.mark.filled:false should have transparent fill', function() {\n    const filledCircleModel = parseUnitModelWithScaleAndLayoutSize({\n      \"mark\": \"circle\",\n      \"encoding\": {\n        \"color\": {\"value\": \"blue\"}\n      },\n      \"config\" : {\n        \"mark\" : {\n          \"filled\" : false\n        }\n      }\n    });\n\n    const filledCircleProps = circle.encodeEntry(filledCircleModel);\n\n    assert.propertyVal(filledCircleProps.stroke, 'value', 'blue');\n    assert.propertyVal(filledCircleProps.fill, 'value', 'transparent');\n  });\n});\n"]}