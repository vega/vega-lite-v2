{"version":3,"file":"toggle.test.js","sourceRoot":"","sources":["../../../../test/compile/selection/toggle.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable quotemark */\n\nimport {assert} from 'chai';\nimport * as selection from '../../../src/compile/selection/selection';\nimport toggle from '../../../src/compile/selection/transforms/toggle';\nimport {parseUnitModel} from '../../util';\n\ndescribe('Toggle Selection Transform', function() {\n  const model = parseUnitModel({\n    \"mark\": \"circle\",\n    \"encoding\": {\n      \"x\": {\"field\": \"Horsepower\",\"type\": \"quantitative\"},\n      \"y\": {\"field\": \"Miles_per_Gallon\",\"type\": \"quantitative\"},\n      \"color\": {\"field\": \"Origin\", \"type\": \"nominal\"}\n    }\n  });\n\n  model.parseScale();\n  const selCmpts = model.component.selection = selection.parseUnitSelection(model, {\n    \"one\": {\"type\": \"multi\"},\n    \"two\": {\n      \"type\": \"multi\", \"resolve\": \"union\",\n      \"on\": \"mouseover\", \"toggle\": \"event.ctrlKey\", \"encodings\": [\"y\", \"color\"]\n    },\n    \"three\": {\"type\": \"multi\", \"toggle\": false},\n    \"four\": {\"type\": \"multi\", \"toggle\": null},\n    \"five\": {\"type\": \"single\"},\n    \"six\": {\"type\": \"interval\"}\n  });\n\n  it('identifies transform invocation', function() {\n    assert.isNotFalse(toggle.has(selCmpts['one']));\n    assert.isNotFalse(toggle.has(selCmpts['two']));\n    assert.isNotTrue(toggle.has(selCmpts['three']));\n    assert.isNotTrue(toggle.has(selCmpts['four']));\n    assert.isNotTrue(toggle.has(selCmpts['five']));\n    assert.isNotTrue(toggle.has(selCmpts['six']));\n  });\n\n  it('builds toggle signals', function() {\n    const oneSg = toggle.signals(model, selCmpts['one'], []);\n    assert.sameDeepMembers(oneSg, [{\n      name: 'one_toggle',\n      value: false,\n      on: [{\n        events: selCmpts['one'].events,\n        update: 'event.shiftKey'\n      }]\n    }]);\n\n    const twoSg = toggle.signals(model, selCmpts['two'], []);\n    assert.sameDeepMembers(twoSg, [{\n      name: 'two_toggle',\n      value: false,\n      on: [{\n        events: selCmpts['two'].events,\n        update: 'event.ctrlKey'\n      }]\n    }]);\n\n    const signals = selection.assembleUnitSelectionSignals(model, []);\n    assert.includeDeepMembers(signals, oneSg.concat(twoSg));\n  });\n\n  it('builds modify expr', function() {\n    const oneExpr = toggle.modifyExpr(model, selCmpts['one'], '');\n    assert.equal(oneExpr, 'one_toggle ? null : one_tuple, one_toggle ? null : true, one_toggle ? one_tuple : null');\n\n    const twoExpr = toggle.modifyExpr(model, selCmpts['two'], '');\n    assert.equal(twoExpr, 'two_toggle ? null : two_tuple, two_toggle ? null : {unit: \\\"\\\"}, two_toggle ? two_tuple : null');\n\n    const signals = selection.assembleUnitSelectionSignals(model, []);\n    assert.includeDeepMembers(signals, [\n      {\n        \"name\": \"one_modify\",\n        \"on\": [\n          {\n            \"events\": {\"signal\": \"one_tuple\"},\n            \"update\": `modify(\\\"one_store\\\", ${oneExpr})`\n          }\n        ]\n      },\n      {\n        \"name\": \"two_modify\",\n        \"on\": [\n          {\n            \"events\": {\"signal\": \"two_tuple\"},\n            \"update\": `modify(\\\"two_store\\\", ${twoExpr})`\n          }\n        ]\n      }\n    ]);\n  });\n});\n"]}