{"version":3,"file":"timeunit.test.js","sourceRoot":"","sources":["../../../../test/compile/selection/timeunit.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:quotemark */\n\nimport {assert} from 'chai';\nimport {assembleRootData} from '../../../src/compile/data/assemble';\nimport {optimizeDataflow} from '../../../src/compile/data/optimize';\nimport {TimeUnitNode} from '../../../src/compile/data/timeunit';\nimport {Model} from '../../../src/compile/model';\nimport * as selection from '../../../src/compile/selection/selection';\nimport {NormalizedUnitSpec} from '../../../src/spec';\nimport {parseModel, parseUnitModel} from '../../util';\n\nfunction getData(model: Model) {\n  optimizeDataflow(model.component.data);\n  return assembleRootData(model.component.data, {});\n}\n\nfunction getModel(unit2: NormalizedUnitSpec) {\n  const model = parseModel({\n    \"data\": {\"values\": [\n      {\"date\": \"Sun, 01 Jan 2012 23:00:01\",\"price\": 150},\n      {\"date\": \"Sun, 02 Jan 2012 00:10:02\",\"price\": 100},\n      {\"date\": \"Sun, 02 Jan 2012 01:20:03\",\"price\": 170},\n      {\"date\": \"Sun, 02 Jan 2012 02:30:04\",\"price\": 165},\n      {\"date\": \"Sun, 02 Jan 2012 03:40:05\",\"price\": 200}\n    ]},\n    \"hconcat\": [{\n      \"mark\": \"point\",\n      \"selection\": {\n        \"two\": {\"type\": \"single\", \"encodings\": [\"x\", \"y\"]}\n      },\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"date\",\n          \"type\": \"temporal\",\n          \"timeUnit\": \"seconds\"\n        },\n        \"y\": {\"field\": \"price\",\"type\": \"quantitative\"}\n      }\n    }, unit2]\n  });\n  model.parse();\n  return model;\n}\n\ndescribe('Selection time unit', function() {\n  it('dataflow nodes are constructed', function() {\n    const model = parseUnitModel({\n      \"mark\": \"point\",\n      \"encoding\": {\n        \"x\": {\"field\": \"date\", \"type\": \"temporal\", \"timeUnit\": \"seconds\"},\n        \"y\": {\"field\": \"date\", \"type\": \"temporal\", \"timeUnit\": \"minutes\"}\n      }\n    });\n    const selCmpts = model.component.selection = selection.parseUnitSelection(model, {\n      \"one\": {\"type\": \"single\"},\n      \"two\": {\"type\": \"single\", \"encodings\": [\"x\", \"y\"]}\n    });\n\n    assert.isUndefined(selCmpts['one'].timeUnit);\n    assert.instanceOf(selCmpts['two'].timeUnit, TimeUnitNode);\n\n    const as = selCmpts['two'].timeUnit.assemble().map((tx) => tx.as);\n    assert.sameDeepMembers(as, ['seconds_date', 'minutes_date']);\n  });\n\n  it('is added with conditional encodings', function() {\n    const model = getModel({\n      \"mark\": \"point\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"date\",\n          \"type\": \"temporal\",\n          \"timeUnit\": \"minutes\"\n        },\n        \"y\": {\"field\": \"price\",\"type\": \"quantitative\"},\n        \"color\": {\n          \"condition\": {\"selection\": \"two\", \"value\": \"goldenrod\"},\n          \"value\": \"steelblue\"\n        }\n      }\n    });\n\n    const data2 = getData(model).filter((d) => d.name === 'data_2')[0].transform;\n    assert.equal(data2.filter((tx) => tx.type === 'formula' && tx.as === 'seconds_date').length, 1);\n  });\n\n  it('is added before selection filters', function() {\n    const model = getModel({\n      \"transform\": [{\"filter\": {\"selection\": \"two\"}}],\n      \"mark\": \"point\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"date\",\n          \"type\": \"temporal\",\n          \"timeUnit\": \"minutes\"\n        },\n        \"y\": {\"field\": \"price\",\"type\": \"quantitative\"}\n      }\n    });\n\n    const data2 = getData(model).filter((d) => d.name === 'data_2')[0].transform;\n    let tuIdx = -1;\n    let selIdx = -1;\n\n    data2.forEach((tx, idx) => {\n      if (tx.type === 'formula' && tx.as === 'seconds_date') {\n        tuIdx = idx;\n      } else if (tx.type === 'filter' && tx.expr.indexOf('vlSingle') >= 0) {\n        selIdx = idx;\n      }\n    });\n\n    assert.notEqual(tuIdx, -1);\n    assert.notEqual(selIdx, -1);\n    assert.isAbove(selIdx, tuIdx);\n  });\n\n  it('removes duplicate time unit formulae', function() {\n    const model = getModel({\n      \"transform\": [{\"filter\": {\"selection\": \"two\"}}],\n      \"mark\": \"point\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"date\",\n          \"type\": \"temporal\",\n          \"timeUnit\": \"seconds\"\n        },\n        \"y\": {\"field\": \"price\",\"type\": \"quantitative\"}\n      }\n    });\n\n    const data2 = getData(model).filter((d) => d.name === 'data_2')[0].transform;\n    assert.equal(data2.filter((tx) => tx.type === 'formula' && tx.as === 'seconds_date').length, 1);\n  });\n});\n"]}