{"version":3,"file":"scales.test.js","sourceRoot":"","sources":["../../../../test/compile/selection/scales.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:quotemark */\n\nimport {assert} from 'chai';\nimport {assembleScalesForModel} from '../../../src/compile/scale/assemble';\nimport {Domain} from '../../../src/scale';\nimport {parseConcatModel, parseRepeatModel} from '../../util';\n\ndescribe('Selection + Scales', function() {\n  it('assembles domainRaw from selection parameter', function() {\n    const model = parseConcatModel({\n      vconcat: [\n        {\n          mark: \"area\",\n          selection: {\n            brush: {type: \"interval\", encodings: [\"x\"]},\n            brush2: {type: \"multi\", fields: [\"price\"], resolve: \"intersect\"}\n          },\n          encoding: {\n            x: {field: \"date\", type: \"temporal\"},\n            y: {field: \"price\", type: \"quantitative\"}\n          }\n        },\n        {\n          selection: {\n            brush3: {type: \"interval\"}\n          },\n          mark: \"area\",\n          encoding: {\n            x: {\n              field: \"date\", type: \"temporal\",\n              scale: {domain: {selection: \"brush\", encoding: \"x\"}}\n            },\n            y: {\n              field: \"price\", type: \"quantitative\",\n              scale: {domain: {selection: \"brush2\", field: \"price\"}}\n            },\n            color: {\n              field: \"symbol\", type: \"nominal\",\n              scale: {domain: {selection: \"brush2\"} as Domain}\n            },\n            opacity: {\n              field: \"symbol\", type: \"nominal\",\n              scale: {domain: {selection: \"brush3\"} as Domain}\n            }\n          }\n        }\n      ],\n      resolve: {\n        scale: {\n          color: 'independent',\n          opacity: 'independent'\n        }\n      }\n    });\n\n    model.parseScale();\n    model.parseSelection();\n\n    const scales = assembleScalesForModel(model.children[1]);\n    const xscale = scales[0];\n    const yscale = scales[1];\n    const cscale = scales[2];\n    const oscale = scales[3];\n\n    assert.isObject(xscale.domain);\n    assert.property(xscale, 'domainRaw');\n    assert.propertyVal(xscale.domainRaw, 'signal',\n      \"vlIntervalDomain(\\\"brush_store\\\", \\\"x\\\", null)\");\n\n    assert.isObject(yscale.domain);\n    assert.property(yscale, 'domainRaw');\n    assert.deepPropertyVal(yscale.domainRaw, 'signal',\n      \"vlMultiDomain(\\\"brush2_store\\\", null, \\\"price\\\", \\\"intersect\\\")\");\n\n    assert.isObject(cscale.domain);\n    assert.property(cscale, 'domainRaw');\n    assert.propertyVal(cscale.domainRaw, 'signal',\n      \"vlMultiDomain(\\\"brush2_store\\\", null, \\\"price\\\", \\\"intersect\\\")\");\n\n    assert.isObject(oscale.domain);\n    assert.property(oscale, 'domainRaw');\n    assert.propertyVal(oscale.domainRaw, 'signal', 'null');\n  });\n\n  it('should bind both scales in diagonal repeated views', function() {\n    const model = parseRepeatModel({\n      repeat: {\n        row: [\"Horsepower\", \"Acceleration\"],\n        column: [\"Miles_per_Gallon\", \"Acceleration\"]\n      },\n      spec: {\n        data: {url: \"data/cars.json\"},\n        mark: \"point\",\n        selection: {\n          grid: {\n            type: \"interval\",\n            resolve: \"global\",\n            bind: \"scales\"\n          }\n        },\n        encoding: {\n          x: {field: {repeat: \"column\"}, type: \"quantitative\"},\n          y: {field: {repeat: \"row\"}, type: \"quantitative\"},\n          color: {field: \"Origin\", type: \"nominal\"}\n        }\n      }\n    });\n\n    model.parseScale();\n    model.parseSelection();\n\n    const scales = assembleScalesForModel(model.children[3]);\n    assert.isTrue(scales.length === 2);\n    assert.property(scales[0], 'domainRaw');\n    assert.property(scales[1], 'domainRaw');\n    assert.propertyVal(scales[0].domainRaw, 'signal', 'grid_Acceleration');\n    assert.propertyVal(scales[1].domainRaw, 'signal', 'grid_Acceleration');\n  });\n\n  it('should merge domainRaw for layered views', function() {\n    const model = parseConcatModel({\n      data: {url: \"data/sp500.csv\"},\n      vconcat: [\n        {\n          layer: [\n            {\n              mark: \"point\",\n              encoding: {\n                x: {\n                  field: \"date\", type: \"temporal\",\n                  scale: {domain: {selection: \"brush\"}}\n                },\n                y: {field: \"price\", type: \"quantitative\"}\n              }\n            }\n          ]\n        },\n        {\n          mark: \"area\",\n          selection: {\n            brush: {type: \"interval\", encodings: [\"x\"]}\n          },\n          encoding: {\n            x: {field: \"date\", type: \"temporal\"},\n            y: {field: \"price\", type: \"quantitative\"}\n          }\n        }\n      ]\n    });\n\n    model.parseScale();\n    model.parseSelection();\n    const scales = assembleScalesForModel(model.children[0]);\n    assert.property(scales[0], 'domainRaw');\n    assert.propertyVal(scales[0].domainRaw, 'signal', 'vlIntervalDomain(\"brush_store\", null, \"date\")');\n  });\n});\n"]}