{"version":3,"file":"transform.test.js","sourceRoot":"","sources":["../../test/transform.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,MAAM,EAAC,MAAM,MAAM,CAAC;AAC5B,OAAO,KAAK,GAAG,MAAM,YAAY,CAAC;AAIlC,OAAO,EAAC,kBAAkB,EAAY,MAAM,kBAAkB,CAAC;AAE/D,QAAQ,CAAC,sBAAsB,EAAE;IAC/B,EAAE,CAAC,4FAA4F,EAAE,GAAG,CAAC,IAAI,CAAC,UAAC,WAAW;QACpH,IAAM,MAAM,GAA8B;YACxC,GAAG,EAAE;gBACH,EAAC,GAAG,EAAE,EAAC,QAAQ,EAAE,cAA0B,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAC,EAAC;gBAC9E,EAAC,EAAE,EAAE,CAAC,EAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,EAAC;aAC/B;SACF,CAAC;QACF,IAAM,SAAS,GAAgB;YAC7B,EAAC,MAAM,QAAA,EAAC;SACT,CAAC;QACF,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,SAAS,CAAC,EAAE,CAAC;gBAC/C,MAAM,EAAE;oBACN,GAAG,EAAE;wBACH,EAAC,GAAG,EAAE,EAAC,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAC,EAAC;wBACnE,EAAC,EAAE,EAAE,CAAC,EAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,EAAC;qBAC/B;iBACF;aACF,CAAC,CAAC,CAAC;QACJ,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC,CAAC;IACtF,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC","sourcesContent":["import {assert} from 'chai';\nimport * as log from '../src/log';\nimport {LogicalOperand} from '../src/logical';\nimport {Predicate} from '../src/predicate';\nimport {TimeUnit} from '../src/timeunit';\nimport {normalizeTransform, Transform} from '../src/transform';\n\ndescribe('normalizeTransform()', () => {\n  it('replaces filter with timeUnit=yearmonthday with yearmonthdate and throws the right warning', log.wrap((localLogger) => {\n    const filter: LogicalOperand<Predicate> = {\n      and: [\n        {not: {timeUnit: 'yearmonthday' as TimeUnit, field: 'd', equal: {year: 2008}}},\n        {or: [{field: 'a', equal: 5}]}\n      ]\n    };\n    const transform: Transform[] = [\n      {filter}\n    ];\n    assert.deepEqual(normalizeTransform(transform), [{\n      filter: {\n        and: [\n          {not: {timeUnit: 'yearmonthdate', field: 'd', equal: {year: 2008}}},\n          {or: [{field: 'a', equal: 5}]}\n        ]\n      }\n    }]);\n    assert.equal(localLogger.warns[0], log.message.dayReplacedWithDate('yearmonthday'));\n  }));\n});\n"]}