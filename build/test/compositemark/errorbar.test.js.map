{"version":3,"file":"errorbar.test.js","sourceRoot":"","sources":["../../../test/compositemark/errorbar.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:quotemark */\nimport {assert} from 'chai';\n\nimport {normalize} from '../../src/spec';\nimport {defaultConfig} from '.././../src/config';\n\n\ndescribe(\"normalizeErrorBar\", () => {\n\n    it(\"should produce correct layered specs for horizontal error bar\", () => {\n      assert.deepEqual(normalize({\n        \"data\": {\"url\": \"data/population.json\"},\n        mark: \"error-bar\",\n        encoding: {\n          \"y\": {\"field\": \"age\",\"type\": \"ordinal\"},\n          \"x\": {\n            \"aggregate\": \"min\",\n            \"field\": \"people\",\n            \"type\": \"quantitative\",\n            \"axis\": {\"title\": \"population\"}\n          },\n          \"x2\": {\n            \"aggregate\": \"max\",\n            \"field\": \"people\",\n            \"type\": \"quantitative\"\n          },\n          \"size\": {\"value\": 5}\n        }\n      }, defaultConfig), {\n        \"data\": {\"url\": \"data/population.json\"},\n        \"layer\": [\n          {\n            \"mark\": \"rule\",\n            \"encoding\": {\n              \"y\": {\"field\": \"age\",\"type\": \"ordinal\"},\n              \"x\": {\n                \"aggregate\": \"min\",\n                \"field\": \"people\",\n                \"type\": \"quantitative\",\n                \"axis\": {\"title\": \"population\"}\n              },\n              \"x2\": {\n                \"aggregate\": \"max\",\n                \"field\": \"people\",\n                \"type\": \"quantitative\"\n              }\n            }\n          },\n          {\n            \"mark\": \"tick\",\n            \"encoding\": {\n              \"y\": {\"field\": \"age\",\"type\": \"ordinal\"},\n              \"x\": {\n                \"aggregate\": \"min\",\n                \"field\": \"people\",\n                \"type\": \"quantitative\",\n                \"axis\": {\"title\": \"population\"}\n              },\n              \"size\": {\"value\": 5}\n            }\n          },\n          {\n            \"mark\": \"tick\",\n            \"encoding\": {\n              \"y\": {\"field\": \"age\",\"type\": \"ordinal\"},\n              \"x\": {\n                \"aggregate\": \"max\",\n                \"field\": \"people\",\n                \"type\": \"quantitative\",\n                // \"axis\": {\"title\": \"population\"}\n              },\n              \"size\": {\"value\": 5}\n            }\n          }\n        ]\n      });\n    });\n\n   it(\"should throw error when missing x2 and y2\", () => {\n      assert.throws(() => {\n        normalize({\n          \"data\": {\"url\": \"data/population.json\"},\n          mark: \"error-bar\",\n          encoding: {\n            \"y\": {\"field\": \"age\",\"type\": \"ordinal\"},\n            \"x\": {\n              \"aggregate\": \"min\",\n              \"field\": \"people\",\n              \"type\": \"quantitative\",\n              \"axis\": {\"title\": \"population\"}\n            },\n            \"size\": {\"value\": 5}\n          }\n        }, defaultConfig);\n      }, Error, 'Neither x2 or y2 provided');\n    });\n });\n"]}